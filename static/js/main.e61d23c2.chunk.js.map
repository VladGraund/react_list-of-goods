{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","length","reverse","App","state","this","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAK,EACHE,EAAaC,OACb,MAEF,KAAK,EACHD,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAW7C,OAJIL,GACFC,EAAaK,UAGRL,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMY,EAAb,4MACEC,MAAQ,CACNR,YAAY,EACZD,SAAU,GAHd,4CAME,WAAU,IAAD,OACP,EAAiCU,KAAKD,MAA9BR,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,IAAbX,EAAiB,WAAa,IAC3Da,QAAS,kBAAM,EAAKC,SAAS,CAAEd,SAAU,KAH3C,iCAQA,wBACEY,KAAK,SACLD,UAAS,4BAAoC,IAAbX,EAAiB,WAAa,IAC9Da,QAAS,kBAAM,EAAKC,SAAS,CAAEd,SAAU,KAH3C,4BAQA,wBACEY,KAAK,SACLD,UAAS,4BAAwBV,EAA0B,GAAb,YAC9CY,QACE,kBAAM,EAAKC,SAAS,CAAEb,YAAaA,KAJvC,uBASiB,IAAfA,GAAoC,IAAbD,IACvB,wBACEY,KAAK,SACLD,UAAU,4BACVE,QACE,kBAAM,EAAKC,SAAS,CAAEd,SAAU,EAAGC,YAAY,KAJnD,sBAYJ,6BACGH,EAAkBD,EAAiBa,KAAKD,OAAOM,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eApDrB,GAAyBC,IAAMC,WCnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e61d23c2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 1:\n      visibleGoods.sort();\n      break;\n\n    case 2:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== 1 ? 'is-light' : ''}`}\n            onClick={() => this.setState({ sortType: 1 })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== 2 ? 'is-light' : ''}`}\n            onClick={() => this.setState({ sortType: 2 })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n            onClick={\n              () => this.setState({ isReversed: !isReversed })\n            }\n          >\n            Reverse\n          </button>\n          {(isReversed === true || sortType !== 0) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={\n                () => this.setState({ sortType: 0, isReversed: false })\n              }\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}